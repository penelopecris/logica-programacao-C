#include <stdio.h>

#define MAX_STRING_LENGTH 200

float num1, num2;

// Função para obter os números do usuário
void obterNumeros();

// Novo procedimento para contar e mostrar valores cujas partes inteiras são ímpares
void contarValoresImpares(int quantidade);

int main() {
    // Chama a função para obter os números
    obterNumeros();
    return 0;
    /* Crie outro procedimento para:
- ler a quantidade de valores reais a serem testados, e ler outros tantos valores quantos os indicados por essa quantidade;
- contar e mostrar todos os valores lidos, pertencentes ao do intervalo, cujas partes inteiras forem números ímpares.
DICA: Usar conformação de tipo (type casting) para isolar a parte inteira (int), antes de testar se é impar*/
}

// Definição da função para obter dois números do usuário
void obterNumeros() {
    int quantidade;
    printf("Digite a quantidade de valores a serem testados: ");
    scanf("%d", &quantidade);

    // Lê os números fornecidos pelo usuário
    for (int i = 0; i < quantidade; i++) {
        float valor;
        printf("Digite o valor %d: ", i + 1);
        scanf("%f", &valor);

        // Converte o valor para inteiro para verificar se é ímpar
        int parteInteira = (int)valor;

        // Se a parte inteira for ímpar, imprime o valor
        if (parteInteira % 2 != 0) {
            printf("Valor lido e parte inteira ímpar: %.2f\n", valor);
        }
    }
}

